// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DigiCertSharp.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OrderDetail
    {
        /// <summary>
        /// Initializes a new instance of the OrderDetail class.
        /// </summary>
        public OrderDetail()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrderDetail class.
        /// </summary>
        /// <param name="certificateDetails">Container for certificate
        /// details</param>
        /// <param name="pendingReissue">If there is a pending reissue, this
        /// section will be populated.</param>
        /// <param name="receipt">Once the certificate has been issued, a
        /// receipt is generated</param>
        public OrderDetail(OrderDetailCertificateDetails certificateDetails = default(OrderDetailCertificateDetails), OrderDetailPendingReissue pendingReissue = default(OrderDetailPendingReissue), OrderDetailReceipt receipt = default(OrderDetailReceipt))
        {
            CertificateDetails = certificateDetails;
            PendingReissue = pendingReissue;
            Receipt = receipt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets container for certificate details
        /// </summary>
        [JsonProperty(PropertyName = "certificate_details")]
        public OrderDetailCertificateDetails CertificateDetails { get; set; }

        /// <summary>
        /// Gets or sets if there is a pending reissue, this section will be
        /// populated.
        /// </summary>
        [JsonProperty(PropertyName = "pending_reissue")]
        public OrderDetailPendingReissue PendingReissue { get; set; }

        /// <summary>
        /// Gets or sets once the certificate has been issued, a receipt is
        /// generated
        /// </summary>
        [JsonProperty(PropertyName = "receipt")]
        public OrderDetailReceipt Receipt { get; set; }

    }
}
